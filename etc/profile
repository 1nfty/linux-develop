# /etc/profile

# System wide environment and startup programs, for login setup
# Functions and aliases go in /etc/bashrc

# It's NOT a good idea to change this file unless you know what you
# are doing. It's much better to create a custom.sh shell script in
# /etc/profile.d/ to make custom changes to your environment, as this
# will prevent the need for merging in future updates.

pathmunge() {
    case ":${PATH}:" in
        *:"$1":*)
            ;;
        *)
            if [ "$2" = "after" ] ; then
                PATH=$PATH:$1
            else
                PATH=$1:$PATH
            fi
    esac
}


if [ -x /usr/bin/id ]; then
    if [ -z "$EUID" ]; then
        # ksh workaround
        EUID=`/usr/bin/id -u`
        UID=`/usr/bin/id -ru`
    fi
    USER="`/usr/bin/id -un`"
    LOGNAME=$USER
    MAIL="/var/spool/mail/$USER"
fi

# Path manipulation
if [ "$EUID" = "0" ]; then
    pathmunge /usr/sbin
    pathmunge /usr/local/sbin
else
    pathmunge /usr/local/sbin after
    pathmunge /usr/sbin after
fi

HOSTNAME=`/usr/bin/hostname 2>/dev/null`
HISTSIZE=1000
if [ "$HISTCONTROL" = "ignorespace" ] ; then
    export HISTCONTROL=ignoreboth
else
    export HISTCONTROL=ignoredups
fi

export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL

# By default, we want umask to get set. This sets it for login shell
# Current threshold for system reserved uid/gids is 200
# You could check uidgid reservation validity in
# /usr/share/doc/setup-*/uidgid file
if [ $UID -gt 199 ] && [ "`/usr/bin/id -gn`" = "`/usr/bin/id -un`" ]; then
    umask 002
else
    umask 022
fi

for i in /etc/profile.d/*.sh ; do
    if [ -r "$i" ]; then
        if [ "${-#*i}" != "$-" ]; then 
            . "$i"
        else
            . "$i" >/dev/null
        fi
    fi
done

unset i
unset -f pathmunge

## user setting
export {http,ftp,https,rsync}_proxy="http://192.168.1.30:10080"
unset {http,ftp,https,rsync}_proxy
function getEnvStr() {
    str=$1
    exePath=$2
    env=""
    arr=(${str//:/ })
    for i in ${arr[@]}; do
        if [ "" != "${env}" ]; then env="${env}:"; fi
        if [ "" != "${exePath}" ]; then env="${env}${i}/bin"; else env="${env}${i}"; fi
    done
    echo $env
}
function add_env() {
    env=$(getEnvStr $1 '')
    if [ "" != "${env}" ]; then
        if [ "" != "${PATH}" ]; then
            env="$PATH:${env}"
        fi
        export PATH="${env}"
    fi
}
function add_bin() {
    env=$(getEnvStr $1 'bin')
    if [ "" != "${env}" ]; then
        if [ "" != "${PATH}" ]; then
            env="$PATH:${env}"
        fi
        export PATH="${env}"
    fi
}
function add_lib() {
    env=$(getEnvStr $1 '')
    if [ "" != "${env}" ]; then
        if [ "" != "${LD_LIBRARY_PATH}" ]; then
            env="$LD_LIBRARY_PATH:${env}"
        fi
        export LD_LIBRARY_PATH="${env}"
    fi
}
# export GO111MODULE=auto
export GOPROXY=https://goproxy.cn
export DEPNOLOCK=1
export GOROOT=/usr/local/go
export GOPATH=/media/xubing/Workspace/DevelopWork/DevProjects
export JAVA_HOME=/usr/local/java
export IDEA_JDK_64=/usr/local/java
export MAVEN_HOME=/usr/local/maven
export GRADLE_HOME=/usr/local/gradle
export GRADLE_USER_HOME=/home/cache-repository/java-gradle
export HADOOP_HOME=/usr/local/hadoop
export SPARK_HOME=/usr/local/spark
export BTRACE_HOME=/usr/local/btrace
export ZK_HOME=/usr/local/zookeeper
export RUSTUP_HOME=/home/cache-repository/rustup
export CARGO_HOME=/home/cache-repository/rust-cargo
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export TCF_HOME=/media/xubing/Workspace/DevelopWork/DevProjects/src/github.com/hyperledger/avalon

add_bin "/usr/local"
add_bin "${HOME}/.local/bin"
add_bin "$GOROOT:$GOPATH"
add_bin "$JAVA_HOME:$MAVEN_HOME:$GRADLE_HOME"
add_bin "$HADOOP_HOME:$SPARK_HOME"
add_bin "$BTRACE_HOME:$ZK_HOME"
add_bin "$RUSTUP_HOME:$CARGO_HOME"
# add_env "/media/xubing/Workspace/DevelopWork/RustProject/github.com/green-element-chain/rust-sgx-sdk/samplecode/dataplatform-sgx/dev_script"
# add_env "/media/xubing/Workspace/DevelopWork/RustProject/github.com/commis/rust-sgx-sdk/samplecode/dataplatform-sgx/dev_script"
# the following code for sgx
export SGX_MODE=HW
add_lib "/opt/intel/sgxsdk/lib64"
add_lib "/opt/intel/sgx-aesm-service/aesm"
add_bin "/opt/intel/sgx-aesm-service/aesm"
if [ -f "/opt/intel/sgxsdk/environment" ]; then source /opt/intel/sgxsdk/environment; fi
# cd /home/developCode
# bash
